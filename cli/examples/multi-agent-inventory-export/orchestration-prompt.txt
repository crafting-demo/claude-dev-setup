You need to implement a CSV export feature for this repository. The feature should allow users to export inventory data in CSV format.

**FEATURE DEFINITION:**
Create a system that exports inventory/product data to CSV files. Users should be able to click a button or link to download a CSV file containing product information like names, SKUs, quantities, prices, categories, and other relevant inventory fields.

**TECHNICAL REQUIREMENTS:**
- **Backend**: REST API endpoint (e.g., `/api/export` or `/export`) that generates and returns CSV data
- **Frontend**: User interface element (button, link, or menu item) that triggers the CSV download
- **Data Format**: Proper CSV with headers, comma-separated values, proper escaping for special characters
- **Sample Data**: Include realistic inventory data (products, quantities, prices, etc.) for demonstration

**USER EXPERIENCE:**
- Simple, intuitive way to access the export function
- Immediate file download when triggered
- Filename should be descriptive (e.g., "inventory-export-2024-01-15.csv")
- Should work in standard web browsers

**AVAILABLE AGENTS:**
- **front_end_engineer** - Specializes in UI components, client-side functionality, and user experience
- **back_end_engineer** - Focuses on APIs, server-side logic, data processing, and backend infrastructure
- **documentation_writer** - Updates documentation, writes user guides, and documents features

**DELIVERABLES:**
- Working CSV export endpoint
- UI element to trigger exports
- Updated documentation explaining the feature

**WORKFLOW:**
Use an iterative approach with multiple rounds of feedback and revisions to demonstrate persistent session capabilities:

1. **Initial Implementation**: Assign tasks to each specialized agent
2. **Review & Feedback**: After each agent completes their work, carefully review the output for:
   - Code quality and best practices
   - Integration between frontend and backend
   - User experience improvements
   - Documentation completeness
3. **Revision Cycles**: Go back to agents with specific feedback and requests for improvements
4. **Cross-Agent Coordination**: Ensure frontend and backend work together seamlessly

**APPROACH:**
Coordinate with the available agents through multiple iterations to deliver a polished, working feature. Each agent brings specialized expertise - use them strategically and don't hesitate to ask for revisions or improvements. The goal is to showcase how persistent sessions enable sophisticated back-and-forth collaboration between agents.

**COMMIT POLICY (MANDATORY):**
- After ANY change is applied by you or any subagent, immediately commit the change before proceeding.
- Use:
  ```bash
  git add -A
  git commit -m "feat: incremental CSV export work (describe specific change)"
  ```
- Do not leave the working tree dirty between steps.

**COMPLETION REQUIREMENTS:**
After all agents have completed their work and you've conducted the revision cycles to ensure a polished, working feature:

1. **Final Quality Check** - Verify that:
   - CSV export endpoint is working correctly
   - Frontend UI element successfully triggers downloads
   - Documentation is complete and accurate
   - All code follows best practices
   - Frontend and backend integrate seamlessly

2. **Create a new branch** - Use git commands to create a new feature branch for your work:
   ```bash
   git checkout -b csv-export-feature-$(date +%s)
   ```

3. **Commit your changes** - Stage and commit all your work:
   ```bash
   git add .
   git commit -m "feat: implement CSV export functionality with UI and documentation"
   ```

4. **Create Pull Request with Automatic Push** - Use `gh` to handle both pushing and PR creation:
   ```bash
   gh pr create --title "✅ feat: implement CSV export functionality with UI and documentation" --body "
   # CSV Export Feature Implementation

   ## Overview
   Implemented a complete CSV export feature allowing users to export inventory data in CSV format.

   ## Technical Implementation
   - **Backend**: REST API endpoint for CSV generation and download
   - **Frontend**: User interface element (button/link) to trigger CSV exports
   - **Documentation**: Updated user guides and feature documentation

   ## Testing Instructions
   1. Navigate to the inventory section
   2. Click the 'Export CSV' button
   3. Verify CSV file downloads with proper inventory data
   4. Check that CSV format includes headers and proper data escaping

   ## Files Modified
   [List will be populated with actual files created/modified by agents]

   ## Multi-Agent Collaboration
   This feature demonstrates sophisticated coordination between:
   - **front_end_engineer**: UI components and user experience
   - **back_end_engineer**: API endpoint and data processing
   - **documentation_writer**: Feature documentation and user guides
   " --base main
   ```
   
   **Important**: GitHub CLI will automatically push the branch and create the PR without any user interaction.

**IMPORTANT**: The PR title MUST start with the ✅ emoji as the first character.

The pull request should demonstrate the collaborative multi-agent workflow and provide reviewers with all necessary information to understand and test the new feature.

Begin implementing this feature. 